/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI.gestion;

import Controlador.ControladorClientes;
import Controlador.ControladorPeliculas;
import Controlador.ControladorTickets;
import Exceptions.ErrorListadoClientesException;
import GUI.Utiles.Vistas;
import GUI.pantallaPpal;
import gestionPeliculas.dto.Cliente;
import gestionPeliculas.dto.Pelicula;
import gestionPeliculas.dto.Ticket;
import gestionPeliculas.dto.UtilesFecha;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Miguelañez-PC
 */
public class NuevoTicket extends javax.swing.JDialog {

    DefaultComboBoxModel<String> modeloCBoxPeliculas;
    DefaultComboBoxModel<String> modeloCBoxClientes;
    pantallaPpal padre;
    //boolean actualizado = false; // PLACEHOLDER - Se usa para reparar temporalmente un error al actualizar el listado de Películas en esta Ventana.
    /**
     * Creates new form NuevoTicket
     */
    public NuevoTicket(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        modeloCBoxPeliculas = (DefaultComboBoxModel<String>) this.jComboBoxListaPelis.getModel();
        modeloCBoxClientes = (DefaultComboBoxModel<String>) this.jComboBoxClientes.getModel();
        rellenarComboBoxPelis();
        rellenarComboBoxClientes();
        padre = (pantallaPpal) parent;
        this.setLocationRelativeTo(null);
        cargarAyudaJH();
    }
    
    /**
     * Creates new form NuevoTicket, y le añade la imágen de la pelicula seleccionada
     */
    public NuevoTicket(java.awt.Frame parent, boolean modal, String imgRoot) {
        super(parent, modal);
        initComponents();
        modeloCBoxPeliculas = (DefaultComboBoxModel<String>) this.jComboBoxListaPelis.getModel();
        modeloCBoxClientes = (DefaultComboBoxModel<String>) this.jComboBoxClientes.getModel();
        rellenarComboBoxPelis();
        rellenarComboBoxClientes();
        this.customJLabelImagenPeli.setImgRoot(imgRoot);
        padre = (pantallaPpal) parent;
        this.setLocationRelativeTo(null);
        cargarAyudaJH();
    }

    /**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTitulo = new javax.swing.JPanel();
        jButtonVolver = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerFechaEm = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jLabelHintImagen = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxClientes = new javax.swing.JComboBox<>();
        customJLabelImagenPeli = new pruebaimageresize_cambio.CustomJLabelImagen();
        jComboBoxListaPelis = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear un nuevo Ticket...");

        jPanelTitulo.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanelTitulo.setMinimumSize(new java.awt.Dimension(225, 30));
        jPanelTitulo.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanelTitulo.setLayout(new java.awt.GridLayout(1, 0));

        jButtonVolver.setText("<-Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        jPanelTitulo.add(jButtonVolver);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 133, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanelTitulo.add(jPanel3);

        jLabel1.setFont(new java.awt.Font("Sitka Heading", 3, 14)); // NOI18N
        jLabel1.setText("COMPRA TICKET");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanelTitulo.add(jLabel1);

        getContentPane().add(jPanelTitulo, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jLabelTitulo.setText("PELICULA");
        jLabelTitulo.setToolTipText("Doble clic para actualizar la lista!");

        jLabel2.setText("Fecha Emision");

        jSpinnerFechaEm.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), new java.util.Date(), new java.util.Date(1893538020000L), java.util.Calendar.DAY_OF_MONTH));
        jSpinnerFechaEm.setEnabled(false);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("CONFIRMAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelHintImagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHintImagen.setText("Imagen Pelicula");

        jLabel4.setText("CLIENTE");
        jLabel4.setToolTipText("Doble clic para actualizar la lista!");

        jComboBoxClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxClientesMouseClicked(evt);
            }
        });

        customJLabelImagenPeli.setToolTipText("Doble clic para Editar!");
        customJLabelImagenPeli.setMaximumSize(new java.awt.Dimension(120, 169));
        customJLabelImagenPeli.setMinimumSize(new java.awt.Dimension(120, 169));
        customJLabelImagenPeli.setPreferredSize(new java.awt.Dimension(120, 169));

        jComboBoxListaPelis.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxListaPelisItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jComboBoxListaPelis, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBoxClientes, 0, 123, Short.MAX_VALUE)
                                    .addComponent(jSpinnerFechaEm, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelHintImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customJLabelImagenPeli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxListaPelis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jSpinnerFechaEm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelHintImagen)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(customJLabelImagenPeli, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14))))))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        if (JOptionPane.showConfirmDialog(this, "¿Cancelar la compra del Ticket?", "SALIR DE COMPRA TICKETS", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            this.dispose();
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Sacar identificadores para CLIENTE y PEL�?CULA
        String strListaPelicula = this.jComboBoxListaPelis.getSelectedItem().toString();
        int codPelicula = Integer.parseInt(strListaPelicula.substring(strListaPelicula.indexOf("=")+1, strListaPelicula.indexOf("}")));
        String filaClienteSeleccionado = jComboBoxClientes.getSelectedItem().toString();
        String NIFCliente = filaClienteSeleccionado.substring(
                filaClienteSeleccionado.indexOf("-")+1, filaClienteSeleccionado.length()
        );
        String fechaEmision = UtilesFecha.spinnerFechaToStringDate(
            this.jSpinnerFechaEm.getValue());
        
        Ticket nuevo = new Ticket(0, codPelicula, NIFCliente);
        
        Ticket insertado = ControladorTickets.nuevoTicket(nuevo);
            
        if (insertado != null) {
            JOptionPane.showMessageDialog(rootPane, "<html>"
                    + "<p>TICKET RESERVADO PARA EL DÍA <b>" + fechaEmision + "</b> CORRECTAMENTE!</p>"
                            + "</html>");
            this.dispose();
            padre.actualizarListaTICKETS();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxClientesMouseClicked
        if (evt.getClickCount() == 2) {
            rellenarComboBoxClientes();
        }
    }//GEN-LAST:event_jComboBoxClientesMouseClicked

    /**
     * AL CAMBIAR DE PELICULA, CAMBIAR TAMBIÉN LA FECHA DE EMISIÓN PARA ESTA PELICULA
     * @param evt 
     */
    private void jComboBoxListaPelisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxListaPelisItemStateChanged
        actualizarFechaEstreno();
    }//GEN-LAST:event_jComboBoxListaPelisItemStateChanged

    public void actualizarFechaEstreno() {
        String strListaPelicula = this.jComboBoxListaPelis.getSelectedItem().toString();
        int codPelicula = Integer.parseInt(strListaPelicula.substring(strListaPelicula.indexOf("=")+1, strListaPelicula.indexOf("}")));
        //Settear la fecha de emisión a la que tenga la película seleccionada.
        Pelicula peliSelect = ControladorPeliculas.getPeliculaByCodPelicula(codPelicula);
        this.jSpinnerFechaEm.setValue(
                UtilesFecha.fechaStrToDate(peliSelect.getFechaEstreno())
        );
    }
    
    /**
     * LIMPIAR Y RELLENAR el combobox de Pelis
     */
    public void rellenarComboBoxPelis() {
        ArrayList<Pelicula> peliculas = ControladorPeliculas.getListaPeliculas();
        modeloCBoxPeliculas.removeAllElements();
        for (Pelicula p: peliculas) {
            modeloCBoxPeliculas.addElement(p.toStringListado());
        }
    }
    
    /**
     * LIMPIAR Y RELLENAR el combobox de Clientes
     */
    public void rellenarComboBoxClientes() {
        try {
            List<Cliente> clientes = ControladorClientes.getListaCliente();
            modeloCBoxClientes.removeAllElements();
            for (Cliente c: clientes) {
                modeloCBoxClientes.addElement(c.getApellidos() + "-" + c.getDNI());
            }
        } catch (ErrorListadoClientesException errClientesList) {
            Vistas.mostrarErrorGUI(rootPane, "ERROR LISTADO CLIENTES", "Se ha producido un error leyendo de la BBDD.\n"
                    + "Comprueba tu conexión o Inténtalo de nuevo!");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NuevoTicket dialog = new NuevoTicket(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    /**
     * Habilitará el acceso a la ayuda de JavaHelp para esta ventana de la aplicación.
     */
    private void cargarAyudaJH() {
        try {
            // Carga el fichero de ayuda
            File fichero = new File("src" + File.separator + "help" + File.separator + "help.hs");
            URL hsURL = fichero.toURI().toURL();

            // Crea el HelpSet y el HelpBroker
            HelpSet helpset = new HelpSet(getClass().getClassLoader(), hsURL);
            HelpBroker hb = helpset.createHelpBroker();

            // Activar la ayuda para cada elemento que deseemos que la tenga asociada
            hb.enableHelpKey(this.getContentPane(), "ayudaGestionTickets", helpset); //abrirá la ayuda para getión de Películas
        } catch (HelpSetException hsExc) {
            System.err.println(hsExc.getMessage());
        } catch (MalformedURLException urlErr) {
            System.err.println("Formato de URL incorrecto!");
            System.err.println(urlErr.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private pruebaimageresize_cambio.CustomJLabelImagen customJLabelImagenPeli;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JComboBox<String> jComboBoxClientes;
    private javax.swing.JComboBox<String> jComboBoxListaPelis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelHintImagen;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelTitulo;
    private javax.swing.JSpinner jSpinnerFechaEm;
    // End of variables declaration//GEN-END:variables
}
